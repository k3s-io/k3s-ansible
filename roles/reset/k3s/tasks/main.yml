---

#################################################################
# The tasks below mimic k3s-uninstall.sh from https://get.k3s.io.
# The comments are taken from this script to make it easier to
# track changes and maintain parity.
#

###################################
# Remove HA cluster method
# Note: not from https://get.k3s.io

- name: Include role, {{ role }}
  vars:
    role: "reset/ha/{{ ha_cluster_method }}"
  include_role:
    name: "{{ role }}"
  when:
    - ha_enabled
    - ha_cluster_method != 'external'
    - inventory_hostname in groups['k3s_server']

#
# /usr/local/bin/k3s-killall.sh
#
- name: Shutdown k3s
  include_tasks: k3s-killall.yml

#
# systemctl disable k3s
# systemctl reset-failed k3s
# systemctl daemon-reload
#
- name: Disable services
  systemd:
    name: "{{ item }}"
    state: stopped
    enabled: no
  failed_when: false
  loop: "{{ k3s_services }}"

- name: daemon_reload
  systemd:
    daemon_reload: yes

#
# rm -f /etc/systemd/system/k3s.service
# rm -f /etc/systemd/system/k3s.service.env
#
- name: Remove service files
  file:
    path: "{{ systemd_dir }}/{{ item }}"
    state: absent
  loop: "{{ k3s_services | product(k3s_service_file_extensions) | map('join', '.') }}"

#
# if (ls /etc/systemd/system/k3s*.service || ls /etc/init.d/k3s*) >/dev/null 2>&1; then
#     set +x; echo 'Additional k3s services installed, skipping uninstall of k3s'; set -x
#    exit
# fi
#
# Should this be done rather than focusing on a discrete list of services (k3s_services)?

#
# for cmd in kubectl crictl ctr; do
#    if [ -L {{ bin_dir }}/$cmd ]; then
#        rm -f {{ bin_dir }}/$cmd
#    fi
# done
#
- name: Remove command files if they are symlink'd
  block:
    - name: Stat command files
      register: stat_command_files
      stat:
        path: "{{ bin_dir }}/{{ item }}"
      loop:
        - kubectl
        - crictl
        - ctr

    - name: Remove command files
      file:
        path: "{{ item.stat.path }}"
        state: absent
      when: (item.stat.exists | default(false)) and (item.stat.islnk | default(false))
      loop: "{{ stat_command_files.results }}"
      loop_control:
        label: "{{ item.item }}"
  when: inventory_hostname in groups['k3s_server']

# Remove files and directories
- name: Remove files and data
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - /etc/rancher/k3s
    - /run/k3s
    - /run/flannel
    - "{{ data_dir }}"
    - /var/lib/kubelet
    - "{{ bin_dir }}/k3s.sh"
    - "{{ bin_dir }}/k3s-killall.sh"    # From https://get.k3s.io
    - "{{ bin_dir }}/k3s-uninstall.sh"  # From https://get.k3s.io

- name: Remove ~{{ ansible_user }}/.kube directory
  file:
    path: "~{{ ansible_user }}/.kube"
    state: absent
  when: inventory_hostname in groups['k3s_server']


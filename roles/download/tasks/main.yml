---

# Determine architecture and suffix
- name: Check for amd64 architecture
  set_fact:
    k3s_arch: "amd64"
    k3s_suffix: ""
  when: ansible_facts.architecture == "x86_64" or
        ansible_facts.architecture == "amd64"

- name: Check for arm64 architecture
  set_fact:
    k3s_arch: "arm64"
    k3s_suffix: "-arm64"
  when:
    - ( ansible_facts.architecture is search("arm") and
        ansible_facts.userspace_bits == "64" ) or
      ansible_facts.architecture is search("aarch64")

- name: Check for arm architecture
  set_fact:
    k3s_arch: "arm"
    k3s_suffix: "-armhf"
  when:
    - ansible_facts.architecture is search("arm")
    - ansible_facts.userspace_bits == "32"

# Determine URLs for download
- name: Determine Github URLs
  set_fact:
    binary_url: "{{ github_url }}/download/{{ k3s_version }}/k3s{{ k3s_suffix }}"
    hash_url:   "{{ github_url }}/download/{{ k3s_version }}/sha256sum-{{ k3s_arch }}.txt"
  when: k3s_commit == 'undefined'
  check_mode: no

- name: Determine Storage URLs
  set_fact:
    binary_url: "{{ storage_url }}/k3s{{ k3s_suffix }}-{{ k3s_commit }}"
    hash_url:   "{{ storage_url }}/k3s{{ k3s_suffix }}-{{ k3s_commit }}.sha256sum"
  when: k3s_commit != 'undefined'
  check_mode: no

- name: Output URLs
  block:
    - name: Binary URL
      debug:
        var: binary_url

    - name: Hash URL
      debug:
        var: hash_url
  when: report_download_urls
  check_mode: no
 
# Download binaries
- name: Download k3s binary
  get_url:
    url: "{{ binary_url }}"
    checksum: "sha256:{{ hash_url }}"
    dest: "{{ bin_dir }}/k3s"
    owner: root
    group: root
    mode: "u=rwx,g=rx,o=rx"

